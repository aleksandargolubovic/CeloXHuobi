/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type newNumber = ContractEventLog<{
  number: string;
  sender: string;
  0: string;
  1: string;
}>;

export interface Storage extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): Storage;
  clone(): Storage;
  methods: {
    retrieve(): NonPayableTransactionObject<string>;

    store(num: number | string | BN): NonPayableTransactionObject<void>;
  };
  events: {
    newNumber(cb?: Callback<newNumber>): EventEmitter;
    newNumber(options?: EventOptions, cb?: Callback<newNumber>): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "newNumber", cb: Callback<newNumber>): void;
  once(
    event: "newNumber",
    options: EventOptions,
    cb: Callback<newNumber>
  ): void;
}
